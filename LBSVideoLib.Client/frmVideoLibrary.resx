<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pnlLogo.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>